name: Deploy Angular App to Kubernetes with Caddy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout del codi
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Build the Angular application
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Build Angular app
      run: npm run build --prod

    # 3. Build and upload the Docker image with Caddy
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # 4. Check if Docker image exists
    - name: Check Docker image exists
      id: check-image
      run: |
        if docker pull ${{ secrets.DOCKER_USERNAME }}/eg-frontend:${{ github.sha }}; then
          echo "Image exists"
          echo "::set-output name=image_exists::true"
        else
          echo "Image does not exist"
          echo "::set-output name=image_exists::false"
        fi

    # 7. Build and push Docker image if it doesn't exist
    - name: Build and Push Docker image
      if: steps.check-image.outputs.image_exists == 'false'
      run: |
        TAG=${{ github.sha }}
        docker build -t ${{ secrets.DOCKER_USERNAME }}/eg-frontend:${{ github.sha }} -t ${{ secrets.DOCKER_USERNAME }}/eg-frontend:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/eg-frontend:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/eg-frontend:latest

    # 8. Configure Kubernetes and apply the manifests
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Configure Kubernetes
      run: |
        echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yaml
  
    - name: Replace variables
      uses: franzbischoff/replace_envs@v1
      with:
        from_file: 'k3s/frontend-deploy.yaml'
        to_file: 'k3s/frontend-deploy.yaml'
        commit: 'false'
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        GITHUB_SHA: ${{ github.sha }}

    - name: Deploy to Kubernetes
      run: |
        KUBECONFIG=kubeconfig.yaml kubectl apply -f k3s/frontend-deploy.yaml
        KUBECONFIG=kubeconfig.yaml kubectl apply -f k3s/frontend-service.yaml

